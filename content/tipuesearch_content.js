var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Grouping', 'text': '亂數分組: \n Base upon the Dart + Python random grouping system and the\xa0 https://github.com/mdecourse/wcms-scrum1 \xa0( https://wcms-scrum1.herokuapp.com/gear_index ), we may be able to create more collaborative product design service. \n Flask Python programs can be deployed at Heroku or self install Ubuntu server. (\xa0 https://mdecp2018.github.io/finalproject-bgx/content/Heroku%20%E8%A8%AD%E5%AE%9A.html )\xa0 \n https://mde.tw/cd2020/downloads/2020spring_cd_2a_list.txt \xa0was taken from\xa0 https://osa.nfu.edu.tw/ \xa0on Feb. 19, 2020. \n The most updated list:\xa0 http://s1.mde.nfu.edu.tw:8000/?semester=1082&courseno=0767 \xa0 \n semester: 1082 \n courseno for 2a:\xa0 0767 \n courseno for 2b: 0780 \n Under https protocol use port 7443, for http use port 8000. \n Please note : since the certificate of s1.mde.nfu.edu.tw is self-signed, when use https to connect to this page, user need to first connect to\xa0 https://s1.mde.nfu.edu.tw:7443/?semester=1082&courseno=0767 \xa0to receive the ssh key to execute the following program. And also pay attention to the rules of\xa0 https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content . \n 學員名單 URL: \xa0 \n Dart source code for random grouping \n evenGrouping.dart: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n 44 \n 45 \n 46 \n 47 \n 48 \n 49 \n 50 \n 51 \n 52 \n 53 \n 54 \n 55 \n 56 \n 57 \n 58 \n 59 \n 60 \n 61 \n 62 \n 63 \n 64 \n 65 \n 66 \n 67 \n 68 \n 69 \n 70 \n 71 \n 72 \n 73 \n 74 \n 75 \n 76 \n 77 \n 78 \n 79 \n 80 \n 81 \n 82 \n 83 \n 84 \n 85 \n 86 \n 87 \n 88 \n 89 \n 90 \n 91 \n 92 \n 93 \n 94 \n 95 \n 96 \n 97 \n 98 \n 99 \n 100 \n 101 \n 102 \n 103 \n 104 \n 105 \n 106 \n 107 \n 108 \n 109 \n 110 \n 111 \n 112 \n 113 \n 114 \n 115 \n 116 \n 117 \n 118 \n 119 \n 120 \n 121 \n 122 \n 123 \n 124 \n 125 \n 126 \n 127 \n 128 \n 129 \n 130 \n 131 \n 132 \n 133 \n 134 \n 135 \n 136 \n 137 \n 138 \n 139 \n 140 \n 141 \n \n \n \n import   \'dart:html\' ; \n \xa0 \xa0 \n \xa0\xa0 InputElement studListUrl = querySelector( "#studListUrl" ); \n \xa0\xa0 String studUrl; \n \xa0\xa0 // 將 Label 改為 Textarea, 避免產生過程結果嵌入所在頁面 \n \xa0\xa0 TextAreaElement output = querySelector( "#output" ); \n \xa0 \xa0 \n main() { \n \xa0\xa0 querySelector( "#submit" ).onClick.listen((e) => grouping()); \n } \n \xa0 \xa0 \n grouping() { \n \xa0\xa0 output.innerHtml =  "" ; \n \xa0 \xa0 \n \xa0\xa0 if   (studListUrl.value !=  "" ) { \n \xa0\xa0\xa0\xa0 studUrl = studListUrl.value; \n \xa0\xa0 }  else   { \n \xa0\xa0\xa0\xa0 studUrl =  \'https://mde.tw/group/downloads/2019fall_cp_1a_list.txt\' ; \n \xa0\xa0 } \n \xa0 \xa0 \n \xa0\xa0 // 組序由 1 開始 \n \xa0\xa0 int gth = 1; \n \xa0\xa0 // 迴圈序號變數 \n \xa0\xa0 int i; \n \xa0\xa0 int j; \n \xa0\xa0 int total; \n \xa0\xa0 int inc; \n \xa0\xa0 // 每組學員暫存數列 \n \xa0\xa0 var gpList = []; \n \xa0\xa0 // 全班分組數列 \n \xa0\xa0 var group = []; \n \xa0\xa0 // 各組人數數列 \n \xa0\xa0 var numList = []; \n \xa0\xa0 var courseTitle =  \'cd2020\' ; \n \xa0 \xa0 \n \xa0\xa0 HttpRequest.getString(studUrl).then((String resp) { \n \xa0\xa0\xa0\xa0 // 利用 trim() 去除字串最後的跳行符號, 之後再利用 split() 根據 \\n 轉為數列 \n \xa0\xa0\xa0\xa0 var studList = resp.trim().split( "\\n" ); \n \xa0\xa0\xa0\xa0 // 數列利用 shuffle() 方法以隨機方法弄亂順序 \n \xa0\xa0\xa0\xa0 studList.shuffle(); \n \xa0\xa0\xa0\xa0 total = studList.length; \n \xa0\xa0\xa0\xa0 output.text +=  "全班總計"   + total.toString() +  " 人\\n" ; \n \xa0\xa0\xa0\xa0 numList = getNumList(studList.length); \n \xa0\xa0\xa0\xa0 inc = 0; \n \xa0\xa0\xa0\xa0 for   (i  in   numList){ \n \xa0\xa0\xa0\xa0\xa0\xa0 // 列印區隔符號 \n \xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  \'=\'   * 20 +  "\\n" ; \n \xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  "group $gth 有 "   + i.toString() +  " 人: \\n" ; \n \xa0\xa0\xa0\xa0\xa0\xa0 gpList = []; \n \xa0\xa0\xa0\xa0\xa0\xa0 for   (j = 0; j < i; j++){ \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 output.text += studList[j+inc] +  "\\n" ; \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 // 在各分組數列中加入將對應的學員學號 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 gpList.add(studList[j+inc]); \n \xa0\xa0\xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0\xa0\xa0 gth = gth + 1; \n \xa0\xa0\xa0\xa0\xa0\xa0 inc = inc + j; \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 //output.text += studList[j] + "\\n"; \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 // 逐步將各組暫存的分組數列加入全班分組數列中 \n \xa0\xa0\xa0\xa0\xa0\xa0 gpList.sort(); \n \xa0\xa0\xa0\xa0\xa0\xa0 group.add(gpList); \n \xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0 // 列出全班分組數列 \n \xa0\xa0\xa0\xa0 output.text += group.toString() +  "\\n" ; \n \xa0\xa0\xa0\xa0 // 列出已經排序後的分組名單 \n \xa0\xa0\xa0\xa0 output.text +=  \'=\'   * 25 +  "\\n" ; \n \xa0\xa0\xa0\xa0 output.text +=  \'以下為排序後的各組成員名單: \\n\' ; \n \xa0\xa0\xa0\xa0 gth = 1; \n \xa0\xa0\xa0\xa0 /* \n \xa0\xa0\xa0\xa0 404231 \n \xa0\xa0\xa0\xa0 s4052 \n \xa0\xa0\xa0\xa0 4062 \n \xa0\xa0\xa0\xa0 s4072 \n \xa0\xa0\xa0\xa0 4082 \n \xa0\xa0\xa0\xa0 5072 \n \xa0\xa0\xa0\xa0 5083 \n \xa0\xa0\xa0\xa0 */ \n \xa0\xa0\xa0\xa0 // 先列出純文字以 \\n 跳行組員資料 \n \xa0\xa0\xa0\xa0 for   (i=0; i < group.length; i++){ \n \xa0\xa0\xa0\xa0\xa0\xa0 // 列印區隔符號 \n \xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  \'=\'   * 20 +  "\\n" ; \n \xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  "group $gth \\n" ; \n \xa0\xa0\xa0\xa0\xa0\xa0 gpList = []; \n \xa0\xa0\xa0\xa0\xa0\xa0 for   (j=0; j < group[i].length; j++){ \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 output.text += group[i][j] +  "\\n" ; \n \xa0\xa0\xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0\xa0\xa0 gth = gth + 1; \n \xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 gth = 1; \n \xa0\xa0\xa0\xa0 // 最後列出超文件以 <br\\> 跳行組員資料, 包含倉儲與網站 \n \xa0\xa0\xa0\xa0 for   (i=0; i < group.length; i++){ \n \xa0\xa0\xa0\xa0\xa0\xa0 // 列印區隔符號 \n \xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  \'\\n\'   +  \'=\'   * 30 +  "<br \\>" ; \n \xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  "group $gth <br \\>" ; \n \xa0\xa0\xa0\xa0\xa0\xa0 gpList = []; \n \xa0\xa0\xa0\xa0\xa0\xa0 for   (j=0; j < group[i].length; j++){ \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if   (group[i][j].startsWith( \'4052\' ) || group[i][j].startsWith( \'4072\' )) { \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  "Repository: <a href=\'https://github.com/s"   +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 group[i][j] +  "/"   + courseTitle +  "\'>"   + group[i][j] +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "</a>"   +  " | Site: <a href=\'https://s"   + group[i][j] +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ".github.io/"   + courseTitle +  "\'>"   + group[i][j] +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "</a><br \\>" ; \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 else   { \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  "Repository: <a href=\'https://github.com/"   +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 group[i][j] +  "/"   + courseTitle + "\'>"   + group[i][j] +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "</a>"   +  " | Site: <a href=\'https://"   + group[i][j] +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ".github.io/"   + courseTitle +  "\'>"   + group[i][j] +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "</a><br \\>" ; \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0\xa0\xa0 gth = gth + 1; \n \xa0\xa0\xa0\xa0 } \n \xa0\xa0 }); \n } \n \xa0 \xa0 \n List getNumList(int total){ \n \xa0\xa0 // total student number \n \xa0\xa0 // int total = 65; \n \xa0\xa0 // initial each group expect to be "eachGrp" number of people \n \xa0\xa0 int eachGrp = 10; \n \xa0\xa0 // may divide into "grpNum" number of group \n \xa0\xa0 int grpNum = total ~/ eachGrp; \n \xa0\xa0 // vacant list \n \xa0\xa0 var splits = []; \n \xa0\xa0 // find remainder when total number divid into "grpNum" number of group \n \xa0\xa0 int remainder = total % grpNum; \n \xa0\xa0 // number of people in one group by calculation \n \xa0\xa0 int calGrp = total ~/ grpNum; \n \xa0 \xa0 \n \xa0\xa0 for   (int i = 0; i < grpNum; i++) { \n \xa0\xa0\xa0\xa0 splits.add(calGrp); \n \xa0\xa0 } \n \xa0\xa0 //print(splits); \n \xa0 \xa0 \n \xa0\xa0 for   (int i = 0; i < remainder; i++) { \n \xa0\xa0\xa0\xa0 splits[i] += 1; \n \xa0\xa0 } \n \xa0\xa0 //print(splits); \n \xa0\xa0 return   splits; \n \xa0 } \n \n \n \n \n \n \n \n index.html: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n \n \n \n < h1 >亂數分組:</ h1 > \n 學員名單 URL: < input   type = "text"   id = "studListUrl"   size = "50"   value = "https://mde.tw/wcm2020/downloads/2020spring_wcm_1a_list.txt" >< br   /> \n < input   type = "submit"   value = "開始分組"   id = "submit" >< br   /> \n < textarea   id = "output"   cols = "80"   rows = "10" ></ textarea > \n \n \n \n \n \n \n \n style.css: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n \n \n \n body { \n \xa0\xa0 color :  white ; \n \xa0\xa0 font-size :  20px ; \n } \n \xa0 \n input, select, textarea { \n font-size :  100% ; \n } \n \n \n \n \n \n \n \n get_student.py \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n 44 \n 45 \n 46 \n 47 \n 48 \n 49 \n 50 \n 51 \n 52 \n 53 \n 54 \n 55 \n 56 \n 57 \n 58 \n 59 \n 60 \n 61 \n 62 \n 63 \n 64 \n 65 \n 66 \n 67 \n 68 \n 69 \n 70 \n 71 \n 72 \n 73 \n \n \n \n from   flask  import   Flask, request  \n from   flask_cors  import   CORS \n \xa0 \n import   requests \n import   bs4 \n import   ssl \n \xa0 \n \'\'\' \n https://s1.mde.nfu.edu.tw:7443/?semester=1082&courseno=0767 \n cd \n 2a 1082/0767 \n 2b 1082/0780 \n \xa0 \n 2a 1072/0777 \n 2b 1072/0790 \n 2a 1062/0788 \n 2a 1062/0802 \n \xa0 \n wcm \n 1082/0744 \n \xa0 \n 1072/0754 \n 1062/0765 \n \xa0 \n wcmj \n 1082/2418 \n \'\'\' \n \xa0 \n app  =   Flask(__name__) \n CORS(app) \n \xa0 \n @app .route( \'/studlist\' ) \n @app .route( \'/\' ) \n def   studlist(): \n \xa0\xa0\xa0\xa0 semester  =   request.args.get( \'semester\' ) \n \xa0\xa0\xa0\xa0 courseno  =   request.args.get( \'courseno\' ) \n \xa0\xa0\xa0\xa0 if   semester  = =   None : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 semester  =   \'1082\' \n \xa0\xa0\xa0\xa0 if   courseno  = =   None : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 courseno  =   \'0744\' \n \xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 url  =   \'https://osa.nfu.edu.tw/query/studlist_ajax.php\' \n \xa0\xa0\xa0\xa0 post_var  =   { \'pselyr\' : semester,  \'pseqno\' : courseno} \n \xa0 \n \xa0\xa0\xa0\xa0 result  =   requests.post(url, data  =   post_var) \n \xa0 \n \xa0\xa0\xa0\xa0 soup  =   bs4.BeautifulSoup(result.content,  \'lxml\' ) \n \xa0\xa0\xa0\xa0 table  =   soup.find( \'table\' , { \'class\' :  \'tbcls\' }) \n \xa0\xa0\xa0\xa0 data  =   [] \n \xa0\xa0\xa0\xa0 rows  =   table.find_all( \'tr\' ) \n \xa0\xa0\xa0\xa0 for   row  in   rows: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 cols  =   row.find_all( \'td\' ) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 cols  =   [ele.text.strip()  for   ele  in   cols] \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 data.append([ele  for   ele  in   cols  if   ele])  # Get rid of empty values \n \xa0\xa0\xa0\xa0 output  =   "" \n \xa0\xa0\xa0\xa0 for   i  in   data[ 2 :]: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 #print(i[0]) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 output  + = i[ 0 ]  +   "\\n" \n \xa0\xa0\xa0\xa0 return   output \n \xa0\xa0\xa0\xa0 #return\xa0 str(pselyr) + " + " +str(pseqno) \n \xa0 \n # 即使在近端仍希望以 https 模式下執行 \n context  =   ssl.SSLContext(ssl.PROTOCOL_TLSv1_2) \n context.load_cert_chain( \'localhost.crt\' ,  \'localhost.key\' ) \n \xa0 \n # 取 flaskapp.py 中的 uwsgi 變數設定 \n uwsgi  =   False \n if   uwsgi: \n \xa0\xa0\xa0\xa0 # 表示程式在雲端執行 \n \xa0\xa0\xa0\xa0 application  =   app \n else : \n \xa0\xa0\xa0\xa0 # 表示在近端執行, 以 python3 wsgi.py 執行 \n \xa0\xa0\xa0\xa0 app.run(host = \'127.0.0.1\' , port = 5443 , debug = True , ssl_context = context) \n \n \n \n \n \n \n \n nginx sites-available/default settings: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n \n \n \n server { \n \xa0\xa0\xa0\xa0 listen 8000; \n \xa0\xa0\xa0\xa0 server_name s1.mde.nfu.edu.tw; \n \xa0\xa0\xa0\xa0 charset utf-8; \n \xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 listen 7443 ssl; \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0 location /static { \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 alias /home/kmol2019/course_studlist/static/; \n \xa0\xa0\xa0\xa0 } \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0 location / { \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 include uwsgi_params; \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 uwsgi_pass\xa0 127.0.0.1:8087; \n \xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 ssl_certificate /etc/stunnel/localhost.crt; \n \xa0\xa0\xa0\xa0 ssl_certificate_key /etc/stunnel/localhost.key; \n \xa0\xa0\xa0\xa0 ssl_session_timeout 5m; \n \xa0\xa0\xa0\xa0 ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2; \n \xa0\xa0\xa0\xa0 ssl_ciphers  "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES" ; \n \xa0\xa0\xa0\xa0 ssl_prefer_server_ciphers on; \n \xa0\xa0\xa0\xa0 try_files $uri $uri/ =404; \n } \n \n \n \n \n \n \n \n uwsgi7.ini \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n \n \n \n [uwsgi] \n socket = 127.0.0.1:8087 \n uid = kmol2019 \n gid = kmol2019 \n plugins-dir = /usr/lib/uwsgi/plugins/ \n plugin = python3 \n master =  true \n logto = / var /log/uwsgi/emperor.log \n logfile-chown = kmol2019:kmol2019 \n processes = 4 \n threads = 2 \n chdir = /home/kmol2019/course_studlist \n wsgi-file = /home/kmol2019/course_studlist/get_student.py \n \n \n \n \n \n \n \n /etc/systemd/system/cmsimfly.service \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n \n \n \n [Unit] \n Description=uWSGI to serve CMSimfly \n After=network.target \n \xa0 \n [Service] \n User=kmol2019 \n Group=kmol2019 \n WorkingDirectory=/home/kmol2019/uwsgi_ini \n ExecStart=/usr/local/bin/uwsgi --emperor /home/kmol2019/uwsgi_ini \n \xa0 \n [Install] \n WantedBy=multi-user.target \n \n \n \n \n \n', 'tags': '', 'url': 'Grouping.html'}, {'title': '2a', 'text': "============================== group 1 Repository: \xa0 40723104 \xa0 | Site: \xa0 40723104 Repository: \xa0 40723107 \xa0 | Site: \xa0 40723107 Repository: \xa0 40723114 \xa0 | Site: \xa0 40723114 \xa0 (group leader) Repository: \xa0 40723115 \xa0 | Site: \xa0 40723115 Repository: \xa0 40723118 \xa0 | Site: \xa0 40723118 Repository: \xa0 40723122 \xa0 | Site: \xa0 40723122 Repository: \xa0 40723123 \xa0 | Site: \xa0 40723123 Repository: \xa0 40723140 \xa0 | Site: \xa0 40723140 Repository: \xa0 40723149 \xa0 | Site: \xa0 40723149 Repository: \xa0 40723151 \xa0 | Site: \xa0 40723151 Repository: \xa0 40723153 \xa0 | Site: \xa0 40723153 Repository: \xa0 40723154 \xa0 | Site: \xa0 40723154 Repository: \xa0 40723155 \xa0 | Site: \xa0 40723155 ============================== group 2 Repository: \xa0 40623143 \xa0 | Site: \xa0 40623143 Repository: \xa0 40723108 \xa0 | Site: \xa0 40723108 Repository: \xa0 40723127 \xa0 | Site: \xa0 40723127 Repository: \xa0 40723132 \xa0 | Site: \xa0 40723132 Repository: \xa0 40723133 \xa0 | Site: \xa0 40723133 Repository: \xa0 40723137 \xa0 | Site: \xa0 40723137 Repository: \xa0 40723141 \xa0 | Site: \xa0 40723141 Repository: \xa0 40723143 \xa0 | Site: \xa0 40723143 Repository: \xa0 40723144 \xa0 | Site: \xa0 40723144 Repository: \xa0 40723147 \xa0 | Site: \xa0 40723147 Repository: \xa0 40723148 \xa0 | Site: \xa0 40723148 Repository: \xa0 40723150 \xa0 | Site: \xa0 40723150 \xa0 (group leader) ============================== group 3 Repository: \xa0 40723103 \xa0 | Site: \xa0 40723103 Repository: \xa0 40723110 \xa0 | Site: \xa0 40723110 \xa0 (group leader) Repository: \xa0 40723112 \xa0 | Site: \xa0 40723112 Repository: \xa0 40723120 \xa0 | Site: \xa0 40723120 Repository: \xa0 40723125 \xa0 | Site: \xa0 40723125 Repository: \xa0 40723126 \xa0 | Site: \xa0 40723126 Repository: \xa0 40723128 \xa0 | Site: \xa0 40723128 Repository: \xa0 40723130 \xa0 | Site: \xa0 40723130 Repository: \xa0 40723139 \xa0 | Site: \xa0 40723139 Repository: \xa0 40723142 \xa0 | Site: \xa0 40723142 Repository: \xa0 40723145 \xa0 | Site: \xa0 40723145 Repository: \xa0 40723146 \xa0 | Site: \xa0 40723146 ============================== group 4 Repository: \xa0 40423155 \xa0 | Site: \xa0 40423155 Repository: \xa0 40723101 \xa0 | Site: \xa0 40723101 Repository: \xa0 40723102 \xa0 | Site: \xa0 40723102 Repository: \xa0 40723106 \xa0 | Site: \xa0 40723106 Repository: \xa0 40723111 \xa0 | Site: \xa0 40723111 Repository: \xa0 40723119 \xa0 | Site: \xa0 40723119 Repository: \xa0 40723121 \xa0 | Site: \xa0 40723121 Repository: \xa0 40723124 \xa0 | Site: \xa0 40723124 Repository: \xa0 40723134 \xa0 | Site: \xa0 40723134 Repository: \xa0 40723135 \xa0 | Site: \xa0 40723135 Repository: \xa0 40723136 \xa0 | Site: \xa0 40723136 Repository: \xa0 40723138 \xa0 | Site: \xa0 40723138 \xa0 (group leader) \n Grouping List: \n [['40723104', '40723107', '40723114', '40723115', '40723118', '40723122', '40723123', '40723140', '40723149', '40723151', '40723153', '40723154', '40723155'], ['40623143', '40723108', '40723127', '40723132', '40723133', '40723137', '40723141', '40723143', '40723144', '40723147', '40723148', '40723150'], ['40723103', '40723110', '40723112', '40723120', '40723125', '40723126', '40723128', '40723130', '40723139', '40723142', '40723145', '40723146'], ['40423155', '40723101', '40723102', '40723106', '40723111', '40723119', '40723121', '40723124', '40723134', '40723135', '40723136', '40723138']] \n", 'tags': '', 'url': '2a.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}, {'title': 'week', 'text': '', 'tags': '', 'url': 'week.html'}, {'title': 'week3', 'text': 'taskleader :40723145 40723126 40723146 \xa0 \xa0 \xa0 1. Describe how to do an efficient random grouping for this course or do the roll calling randomly? \n taskleader :40723110 40723112 40723130 \xa0 \xa0 \xa0 2. Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain CMSiMDE website, Pelican blog and Reveal.js presentation on Github? \n taskleader :40723125 40723103 40723120 40723142 \xa0 \xa0 \xa0 \xa03. What do you need to know from http://www.coppeliarobotics.com/helpFiles/index.html to implement a four-wheeled robot? \n w3開會紀錄 \n', 'tags': '', 'url': 'week3.html'}, {'title': 'week4', 'text': '', 'tags': '', 'url': 'week4.html'}, {'title': 'week5', 'text': '', 'tags': '', 'url': 'week5.html'}, {'title': 'week6', 'text': '', 'tags': '', 'url': 'week6.html'}, {'title': 'week7', 'text': '', 'tags': '', 'url': 'week7.html'}, {'title': 'MechanicalDesignProcess', 'text': '我們的設計都將從產品的想法開始。這些想法需要被驗證 , 因此 , 我們將著手構建原型 , 如果這些原型通過書面規範 , 我們將通過圖紙記錄我們的設計。我們需要此文檔才能以可重複的方式構建更多產品。本章將讓我們從僅僅對產品的想法出發 , 一直到以最佳方式構成所有單個物件的最終設計。我們從 " 空白紙 " 開始設計 , 那張紙將充滿物理性質。第一個令人關切的項目是確定紙張是否確實為 " 空白 " 或是否存在一些限制。下一個值得關注的項目是確定要包括哪些物理性質。然後 , 我們應該假設這些性質是基於整體設計目標的最佳配置 , 因此 , 我們將以一些詞語來總結我們對該物件配置的選擇。 \n \xa0 \n 2.1 起點 \n 設計師的任務是繼續對現有設計進行強化 , 或者開始全新的設計。讓我們花一點時間看看這些起點的區別是什麼。 \n \n 全新的設計 : 「清潔圖紙」是對設計師的開始 ; 除了遵守規範之外 , 它們基本上沒有任何限制。我們將有一整節關於規範的確切內容及其各種元件。 \n 延續 ( 或添加 ) 現有設計 : 這是全新設計的變體 , 但只能修改現有設計的一小部分。這裏的設計師對全新的設計有許多相同的挑戰 , 但額外的工作必須利用現有的設計。我們將有一個單獨的章節來定義 " 系統 " 在此背景下的確切內容。 \n 對現有的設計進行重大修改 : 同樣 , 這是全新設計的變體 , 但在這種情況下 , 將修改原始設計的很大一部分。這裏的設計師的任務是改變整體設計的一部分 , 因此比全新的設計有更多的約束。 \n \n 因此，重要的是要知道當前的設計工作將適合先前所做的工作。我們的“基本佈局”可以在有或沒有工作約束的情況下進行。 \n 2.2 定義設計邊界 : 系統描述 \n 定義正在設計的 " 系統 " 的幾句話 : 設計可能極其複雜和龐大 ( 如航天飛機或大型客機 ) 、更小的系統 ( 想想汽車 ), 或者更小的系統 , 如個人電腦、咖啡機或手機。所有這些設計項目的範圍，成本，時間，承諾的資源數量以及與其他設備的接口都不同。設計人員必須牢記正在設計的系統。這一點很重要 , 原因有很多 , 其中幾個原因包括 : \n \n 專注於個人責任 ( 工作範圍 ) \n 了解與該設計交互的其他設備 \n 整體 " 系統 " 功能 ( 而不僅僅是子系統的功能 ) \n \n 甚至像手機這樣“小”的東西也可以作為大系統的一部分。即，消費者購買的組合可以包含： \n \n 手機 \n 電池充電器 \n 電纜 \n  Sim  卡 \n 說明書 \n 其他運輸材料 ( 標籤、袋子、氣泡包裝 )( 我們將限制此處對 " 系統 " 的討論 , 因為您甚至可以想到一個更大的系統 , 包括手機塔和衛星系統 ) 。我們從系統描述開始 , 因為大多數電子外殼都環繞和支援產品。有時 , 可以將一種產品視為較大產品的一部分。例如 , 網路適配器卡 ( 產品本身 ) 可以放入微電腦 ( 第二個產品 ), 並形成全新的產品 , 在此示例中 , 一個可聯網的微電腦。隨著可聯網的微電腦本身構成網路的一部分 , 情況變得更加複雜 , 而網路可能是更大的產品。從另一種方式來看 , 我們可能的任務是只設計一個更大系統的子系統。因此 , 我們的 " 系統 " 可能甚至不是產品 , 而僅僅是一個更大的 " 系統 " 的一部分 , 該系統已被分解為 ( 時間 ) 可管理的部分。 \n \n 圖 2.1 系統說明 \n 例如，我們的任務是設計一個數據記錄器，作為測量系統的一部分。該系統如圖 2.1 所示。該系統至少由三個主要子系統組成： \n \n 數據記錄器 \n 數據記錄器安裝支架 \n 測量桿（標記為“桿”），其中包括另一個子系統，即數據記錄器支架，實際上“系統”包括電纜、運輸容器（盒）和說明手冊（但在此示例中，我們將其忽略）。附帶說明一下，圖 2.1 中的系統是 Trimble Survey 系統的照片，該系統出現在華盛頓特區的史密森尼博物館中。我們已成為“測量員系統設計組”的團隊成員，並將設計一部分總體設計（數據記錄器部分）。因此，我們的首要任務是確定（指定）我們到底要設計什麼（在給定的時間內圍繞我們負責的項目建立“圍欄”之類的東西）。要完成此任務，我們將需要一個規範。（請參考第 1 章有關規範的討論。） \n \n 2.3設計過程 \n 2.3.1總體項目開始到項目完成 \n 設計可以以多種方式進行。所有公司在執行整個產品設計過程的方式上都有差異，但是它們確實具有一些共同的特徵。沒有什麼特別的方法是絕對正確的。最終結果（符合規範）是衡量成功的標準。設計通常按以下步驟進行： EPE 設計人員將承擔以下任務的“絕大部分”。他們將是許多工作的“執行者”和“推動者”。如果他們自己不做這項工作，那麼他們肯定得對這項工作負責。 \n 1.構思草圖–這是項目的“理想”階段。單詞必須變成這些圖片來表示。一旦想法採用某種形式，就可以輕鬆地對其進行審查和修訂。審核小組中的某些人需要對構想有“了解”才能真正看到所提出的內容。 \n 2.審查想法並授權進行原型製作 - 此操作將“想法圖片”轉化為團隊可以實際接觸的東西。現在可以以客戶使用產品的方式來拾取，保存和使用草圖形式中看起來不錯的產品；原型是一張完整的三維圖片。“進行授權”很重要，因為這些項目通常在時間和金錢上受到限制，因此這些支出必須由團隊同意。步驟 3 和 4 （如下）實際創建出原型。 \n 3.原型製作的想法圖（文件創建）–通常，將草圖轉換為數字化的圖文件，從而可以進行設計。（設計現在位於修訂版 1 。）包含斜體字，以表示正式文檔的“修訂級別”，第 12 章中對此進行了進一步擴展。 \n 4.原型製造（物理零件）–項目團隊將確定製造原型的成本和時間限制。有時候，只需要一個“快速而粗糙的”原型即可取得良好的進展。有時需要按照嚴格的規格來構造原型。 EPE 設計人員應該對開發階段需要什麼有很好的認識。 \n 5.原型分析和測試–團隊收到原型後，將對其進行測試以查看原型是否符合規範。項目團隊僅需要確定進行哪些測試，以決定測試之後如何進行。 \n 6.審查原型和測試結果–測試結果由團隊審查，並提出修訂建議。（假設版本 1 需要改進，我們將設計修訂為版本 2 。） \n 7.進行更改以改進原型（圖紙和原型）–這是迭代過程的開始，最終將使設計符合產品規格。 \n 8.對版本 2 的進一步分析和測試（假設版本 2 符合產品規格。） \n 9.產生最終文件 / 最終測試 / 最終審查 \n 10.正式批准生產發布的設計 \n \xa0 \n 請注意，上述過程中的“生產下達”允許生產“一定數量”的單元是生產並出售給客戶，或用作更多單元以用於更廣泛的測試程序。公司在為客戶發布和測試產品的過程上可以有多種方式的差異。另請注意，大多數項目的修訂版將比所示的兩個修訂版多很多，但是該項目通常會如所示進行。 \n 2.3.2 EPE設計器的開始注意事項 \n 沒有任何“絕對正確”的方式可以進行 EPE 設計器的設計。每種情況都有其獨特的最佳方法，以使可見的所需進度成為可能。有時，幾天之內就可以放在一起的原型可以為市場帶來令人難以置信的新產品突破。在其他情況下，最好的方法是採用系統的方法來提出一些可能的解決方案，而這些解決方案需要花費數月的時間才能完成。話雖如此，以下概述至少應該作為起點並對設計有用。 \n 1.確定與負載不直接相關的解決方案用途和要求。這些要求中一些更重要的是： \n （ a ）環境–產品將在哪裡使用？例如辦公室 / 室外 / 高空 / 車輛上。 \n （ b ）溫度–環境的極端溫度是多少？ \n （ c ）預期壽命–一次使用，多年保修，服務？ \n （ d ）成本要求–始終是重要的考慮因素。絕對將取決於生產的單元數量和工裝預算。 \n （ e ）加工要求–外觀細節可能會大大影響成本。 \n （ f ）尺寸和重量限制–當前行業解決方案的局限性是什麼？影響設計師選擇的材料 / 製造技術。 \n （ g ）安全和法規要求–產品故障的影響是什麼？以上所有這些都是 EPE 設計器設計之初要考慮的重要考慮因素。例如，室內與室外環境會產生不同的設計。與預期使用“一次”的設計相比，需要經過 1000 次使用後的設計產生了不同的設計。成本低於 5 美元的設計與成本低於 100 美元的設計產生了不同的設計。通過遍歷以上每個元素， EPE 設計人員可以確定一些初始約束。 \n 2.根據可能需要單個構件（和組件）承受的所有各種可能類型的載荷來確定或估算工作載荷。有必要考慮所有可能的載荷組合，並在可能的情況下確定載荷與時間之間的關係。一些可能的載荷類型為： \n （ a ）靜態 \n （ b ）穩態動態（振動） \n （ c ）瞬態動態 \n （ d ）衝擊或撞擊 \n （ e ）身體接觸，例如點載荷或摩擦力 \n （ f ）其他載荷，例如熱 / 重力 / 聲學載荷上述載荷確定對於 EPE 設計者的設計也是非常重要的考慮因素。例如， 10 磅靜態負載與 100 磅靜態負載產生了不同的設計。如果這些負載隨時間變化，這將導致不同的設計解決方案。確定負載的大小和類型將直接確定支撐電氣組件所需的材料和橫截面形狀。 \n 3.確定故障機制。變形是由於軸向，剪切，彎曲或扭轉載荷而發生的。可能的失效模式為： \n （ a ）總體屈服（整體非彈性行為） \n （ b ）破裂或斷裂 \n （ c ）突然–由脆性材料上的靜態或動態載荷引起 \n （ d ）緩慢–由延性材料上的靜態載荷引起 \n （ e ）漸進式–由反复的載荷引起（疲勞） \n （ f ）過度變形 \n （ g ）屈曲 \n （ h ）蠕變–在恆定應力下變形 \n （ i ）鬆弛–在恆定應變下改變應力 \n （ j ）磨損（磨損） \n （ k ）腐蝕 \n EPE設計人員確定他們的設計將如何失敗（在當前設計狀態下），有可能修改該設計以防止失敗。測試還將揭示一些故障機制。然而，如果在測試之前可以考慮其中一些故障機制，則可以節省很多開發成本。總結以上三項，通過確定設計的用例，負載和潛在的故障機制， EPE 設計人員可以在紮實的基礎上進行設計。 \n 2.4 最佳物件放置 \n 大多數設計都可以認為是物體在空間的物理放置。對像是整個程式集的單獨部分。某些單獨的部件是完全已知的 ( 它們要麼從另一家公司的貨架上購買 , 要麼重複使用以前在內部設計的部件 ) 。除了 " 已知 " 零件外 , 其他部件還需要全新設計。這些新部件可在內部生產 , 也可以完全指定由另一家公司生產。電子包裝設計主要包括將子系統安排到最有效的排列中。決定這種安排的第一步是查看子系統的單獨卷。這些卷 , 以及它們之間清除所需的 " 間隙 ", 通常會設置 " 外部邊界 ", 因此 , 在很大程度上設置產品的總體尺寸。有時 , 設計人員首先採用的標準是產品的整體尺寸。從這裏 , 他們必須決定它們能否在給定的總體大小內容納所有要求的內容。也就是說 , 我們的子系統可能確實需要收縮以適應這個給定的總體規模。基本設計過程的一個方面如圖 2.2 所示。這顯示了一個物體 ( 在太空中 ) 與外殼 ( 顯示為 " 牆 ") 的距離。我想開始討論電子外殼的設計 , 描述幾個設計 " 場景 " 。討論的大部分內容都是針對  2D( 平面視圖 , 從上面 ) 的情況 , 但很容易擴展為包括  3D( 側視圖或  Z  方向 ), 我將展示第三視圖的一些示例 : 基本物件 / 牆間隙 : 圖  2.2  顯示了物件和牆。 " 物件 " 可以被視為任何內容。例如 , 它可以是印刷電路板元件、汽車發動機或任何電子元件。 " 牆 " 可視為表面外的外殼或所設計物品的外部。在幾乎每一個設計中 , 設計師都必須確定 " 物件 " 和 " 牆 " 之間的距離 ( 間隙 ) 。這裡的想法可以擴展到確定物件  1  和物件  2  之間的距離。這些確定的間隙都不需要彼此相同。 X  方向中的間隙可能不同於  Y  方向中的間隙 , 後者也可能與  Z  方向中的間隙不同。 \n 2.4.1間隙距離 \n \xa0 \n 1.物體和牆壁的公差：如果要保持特定的距離（例如，假設為 0.100 英寸）和標稱的整體（外部）尺寸，則設計必須考慮以下因素：•最厚的牆壁在其極限處公差•最大可能的物體（在物體公差的最高極限處）請注意，最厚的壁和最大的物體都減小了 0.100 英寸的標稱間隙距離。（還請注意，最薄的壁和最小的物體都可以增加 0.100 英寸的標稱間隙距離。）•必須考慮將物體固定在盒子上。也就是說，緊固系統將允許物體在多大程度上靠近牆壁？假設對像上有一個簡單的安裝孔，盒子上有一個螺紋凸台。物體上的孔（比）要大一些（用於將物體固定到盒子的螺紋凸台中的螺釘）。因此，如果緊固件位於通孔的一側邊緣，則物體可能會更靠近牆壁。還必須考慮盒形螺紋凸台位置的位置公差（相對於盒壁），因為凸台實際上可能更靠近壁（由於製造公差）。通常，可以忽略此“緊固公差”，但某些間隙在有限的緊湊空間設計中，這可能很關鍵。因此，對於到目前為止的間隙示例，僅考慮公差，我們可以具有以下公差：•壁厚可以厚 0.005 英寸。（在“受限”的整體尺寸下，所有這些都會增加盒子內部的壁厚）。•物體本身（將孔安裝到物體邊緣）可能處於最大位置公差；這可能是 0.010 英寸。 \n \n 由於其位置公差，盒子中的安裝凸台可能更靠近牆壁。這可能是 0.005 英寸。•安裝孔可能比（最小）緊固件直徑大 0.010 英寸，從而允許額外移動 0.005 英寸。以上所有（ 4 ）公差都加到 0.005 + 0.010 + 0.005 + 0.005 ，總計為 0.025 英寸。 \n', 'tags': '', 'url': 'MechanicalDesignProcess.html'}, {'title': 'Assignment1', 'text': '', 'tags': '', 'url': 'Assignment1.html'}, {'title': 'Python3.8.2', 'text': 'basic Win10 portable programming \n 在你的可攜下創建一個data子目錄\xa0 :\xa0\xa0 \n \n --everything-is-local\xa0 \xa0 \n https://git-scm.com/download/win \xa0 \xa0 \xa0 \xa0 \xa0 \n 要用git指令要有portablegit 。data下子目錄存取為portablegit(需與啟動檔配合)。 \n start.bat (參考) : \n \n . \n .. \n ... \n ================================================================= \n \n https://www.python.org/downloads/ \n 選取需要的版本(EX : 3.8.2)\xa0 \n 點取執行檔 Windows x86-64 executable installer \n data下子目錄 存取的名稱要跟執行檔相配合(EX : py38) \n \n . \n .. \n ... \n ================================================================= \n \n \n \n \n \n Download Scintilla and SciTE \n \n \n \n 編輯器(用來創建start.bat , stop.bat) https://www.scintilla.org/SciTEDownload.html \n 解開檔案為wscite \n 通過打開SciTE.exe\xa0 \\ Option \\ Open Global Options File \n 找到code.page的部分 , 把code.page=0給註記掉 , 並把code.page=65001取消註記 \n \n \n start.bat\xa0 : \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n \n \n \n @echo off \n set Disk=y \n subst %Disk%: "data" \n \xa0 \n %Disk%: \n \xa0 \n set HomePath=%Disk%:\\home_mdecourse \n set HomeDrive=%Disk%:\\home_mdecourse \n set Home=%Disk%:\\home_mdecourse \n set USERPROFILE=%Disk%:\\home_mdecourse \n \xa0 \n REM for putty \n set GIT_HOME=%Disk%:\\portablegit\\bin\\ \n set GIT_SSH=%Disk%:\\putty\\plink.exe \n \xa0 \n REM 將系統 Python 程式的 io 設為 utf-8 \n set PYTHONIOENCODING="utf-8" \n \xa0 \n set PYTHONPATH=%Disk%:\\py38\\DLLs;%Disk%:\\py38\\Lib;%Disk%:\\py38\\Lib\\site-packages; \n set PYTHONHOME=%Disk%:\\py38 \n \xa0 \n set path_python=%Disk%:\\py38;%Disk%:\\py38\\Scripts; \n set path_msys2=%Disk%:\\msys64\\mingw64\\bin; \n REM coreutils is for compiling fossil scm \n set path_coreutils=%Disk%:\\coreutils-5.3.0\\bin;%Disk%:\\depends22_x64; \n set path_tcc=%Disk%:\\tcc; \n set path_cmake=%Disk%:\\cmake-3.10.1-win64-x64\\bin; \n set path_nodejs=Disk%:\\nodejs;%Disk%:\\nodejs\\appdata\\roaming\\npm; \n set path_git=%Disk%:\\portablegit\\bin; \n set path_xming=%Disk%:\\Xming; \n set path_latex=%%Disk%:\\Pandoc;%Disk%:\\TinyTeX\\bin\\win32; \n \xa0 \n path=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%; \n \xa0 \n start /MIN cmd.exe \n start /MIN cmd.exe \n start /MIN cmd.exe \n start /MIN cmd.exe \n \xa0 \n start /MIN %Disk%:\\wscite\\SciTE.exe \n start /MIN %Disk%:\\wscite\\SciTE.exe \n \xa0 \n Exit \n \n \n \n \n \n \n \n \n stop.bat \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n \n \n \n @echo off \n set Disk=y \n path=%PATH%; \n \xa0 \n taskkill /IM python.exe /F \n taskkill /IM pythonw.exe /F \n taskkill /IM node.exe /F \n taskkill /IM Range.exe /F \n taskkill /IM SciTE.exe /F \n REM 終止虛擬硬碟與目錄的對應 \n subst %Disk%: /D \n REM 關閉 cmd 指令視窗 \n taskkill /IM cmd.exe /F \n EXIT \n \n \n \n \n \n \n \n - \n 假使要快速比較修改前後 :，可使用一個工具 :\xa0 \n \xa0 KDiff3 - Home \n http://kdiff3.sourceforge.net/ \n \n \n 可即時看到檔案間的差別 \n 也可以用來比較 Tiny C Compiler\xa0\xa0 \n https://directory.fsf.org/wiki/Tiny_C_Compiler \xa0\xa0 檔案編輯前後的差異 \n \n \n https://bellard.org/tcc/ \n . \n .. \n ... \n ================================================================ \n pip \n get-pip.py 頁面存取成data下的get-pip.py \n 再繼續用 : \n \n \n \n \n \n \n 1 \n \n \n \n python -m pip install flask lxml bs4 flask-cors Markdown pelican leo \n \n \n \n \n \n \n \n 下載網際系統相關套件 \n \n ============================================================== \n \n HxD - Freeware Hex Editor and Disk Editor \n \n \n \n \n https://mh-nexus.de/en/hxd/ \xa0 \xa0 \xa0 \n 選取該version區目前適合的版本 \n 利用 HxD 修改 pip.exe 中python.exe 的所在位置(pip.exe是存取在p38的Scripts裡) , HxD 開啟之後搜尋c:\\py38\\python.exe , 然後將滑鼠停在 c 然後輸入y:\\p37\\python.exe, 以便讓可攜系統啟動後, 可以將指令搜尋路徑設到 y:\\p38\\Scripts , 這樣就可以直接以\xa0 "pip install " 指令安裝套件. \n \n \n \n \n \n \n 1 \n \n \n \n pip install Flask Markdown lxml bs4 flask_cors pelican leo \n \n \n \n \n \n \n \n \n . \n .. \n ... \n ================================================================ \n MSYS2 installer \n MSYS2 :\xa0 https://www.msys2.org/ \n \n 接著設定start.bat \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n \n \n \n REM 設定 msys2 64 位元的執行路徑 \n set path_msys2=%Disk%:\\msys64\\mingw64\\bin; \n \xa0 \n path=%Disk%:;%path_python%;%path_git%;%path_msys2%; \n \n \n \n \n \n \n \n \n . \n .. \n ... \n ================================================================= \n ShareX \n ShareX :\xa0 https://getsharex.com/ \n \n . \n .. \n ... \n ================================================================= \n Tmp (Y\\tmp : git clone .....) \n \n . \n .. \n ... \n ================================================================= \n https://github.com/flutter/flutter \n . \n .. \n ... \n ================================================================= \n Fossil \n \n https://www.fossil-scm.org/index.html/doc/trunk/www/build.wiki \n \n \n . \n .. \n ... \n ================================================================= \n putty\xa0 putty \n \n', 'tags': '', 'url': 'Python3.8.2.html'}, {'title': 'CoppeliaSim', 'text': 'Assignment 1-3分工 \n https://www.coppeliarobotics.com/helpFiles/index.html \n \n \n CoppeliaSim 高度可定制的模擬器，可以自定義模擬的每個方面。此外模擬器本身可以進行定制，以使性能完全符合要求。 \n 這可以通過精心設計的應用程序編程接口（API）來實現。 \n 支持六種不同的編程或編碼方法，每種方法都具有相對於其他方法的特殊優點（顯然還有缺點），但所有六種方法都是相互兼容的（即可以同時使用，甚至可以協同使用）。 \n', 'tags': '', 'url': 'CoppeliaSim.html'}, {'title': 'Random grouping', 'text': '\n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n \n \n \n import   requests \n import   random \n url  =   "https://mde.tw/cd2020/downloads/2020spring_cd_2a_list.txt" \n Msource  =   requests.get(url) \n #print(Msource.text) \n member  =   Msource.text \n mlist  =   member.split( "\\n" ) \n mlist.pop() \n #print(member) \n mlen  =   len (mlist) \n #print(mlist[0:13]) \n random.shuffle(mlist) \n \xa0 \n g1  =   13 \n g2  =   2 * g1 \n g3  =   3 * g1 \n g4  =   int (mlen) \n \xa0 \n print ( "全班共" ,mlen, "人" ) \n for   i  in   range ( 1 , 5 ): \n \xa0\xa0\xa0\xa0 print ( "Group" ,i, ":" ) \n \xa0\xa0\xa0\xa0 if   (i  = =   1 ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 for   j  in   range ( 0 ,g1): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print (mlist[j]) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 j  + =   1 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( "-" * 20 ) \n \xa0\xa0\xa0\xa0 elif   (i  = =   2 ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 for   m  in   range (g1,g2): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print (mlist[g1]) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 g1  + =   1 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( "-" * 20 ) \n \xa0\xa0\xa0\xa0 elif   (i  = =   3 ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 for   k  in   range (g2,g3): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print (mlist[g2]) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 g2  + =   1 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( "-" * 20 ) \n \xa0\xa0\xa0\xa0 elif   (i  = =   4 ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 for   l  in   range (g3,g4): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print (mlist[g3]) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 g3  + =   1 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( "-" * 20 ) \n print (mlist) \n \n \n \n \n \n \n', 'tags': '', 'url': 'Random grouping.html'}]};