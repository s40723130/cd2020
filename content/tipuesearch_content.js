var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Grouping', 'text': '亂數分組: \n Base upon the Dart + Python random grouping system and the\xa0 https://github.com/mdecourse/wcms-scrum1 \xa0( https://wcms-scrum1.herokuapp.com/gear_index ), we may be able to create more collaborative product design service. \n Flask Python programs can be deployed at Heroku or self install Ubuntu server. (\xa0 https://mdecp2018.github.io/finalproject-bgx/content/Heroku%20%E8%A8%AD%E5%AE%9A.html )\xa0 \n https://mde.tw/cd2020/downloads/2020spring_cd_2a_list.txt \xa0was taken from\xa0 https://osa.nfu.edu.tw/ \xa0on Feb. 19, 2020. \n The most updated list:\xa0 http://s1.mde.nfu.edu.tw:8000/?semester=1082&courseno=0767 \xa0 \n semester: 1082 \n courseno for 2a:\xa0 0767 \n courseno for 2b: 0780 \n Under https protocol use port 7443, for http use port 8000. \n Please note : since the certificate of s1.mde.nfu.edu.tw is self-signed, when use https to connect to this page, user need to first connect to\xa0 https://s1.mde.nfu.edu.tw:7443/?semester=1082&courseno=0767 \xa0to receive the ssh key to execute the following program. And also pay attention to the rules of\xa0 https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content . \n 學員名單 URL: \xa0 \n Dart source code for random grouping \n evenGrouping.dart: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n 44 \n 45 \n 46 \n 47 \n 48 \n 49 \n 50 \n 51 \n 52 \n 53 \n 54 \n 55 \n 56 \n 57 \n 58 \n 59 \n 60 \n 61 \n 62 \n 63 \n 64 \n 65 \n 66 \n 67 \n 68 \n 69 \n 70 \n 71 \n 72 \n 73 \n 74 \n 75 \n 76 \n 77 \n 78 \n 79 \n 80 \n 81 \n 82 \n 83 \n 84 \n 85 \n 86 \n 87 \n 88 \n 89 \n 90 \n 91 \n 92 \n 93 \n 94 \n 95 \n 96 \n 97 \n 98 \n 99 \n 100 \n 101 \n 102 \n 103 \n 104 \n 105 \n 106 \n 107 \n 108 \n 109 \n 110 \n 111 \n 112 \n 113 \n 114 \n 115 \n 116 \n 117 \n 118 \n 119 \n 120 \n 121 \n 122 \n 123 \n 124 \n 125 \n 126 \n 127 \n 128 \n 129 \n 130 \n 131 \n 132 \n 133 \n 134 \n 135 \n 136 \n 137 \n 138 \n 139 \n 140 \n 141 \n \n \n \n import   \'dart:html\' ; \n \xa0 \xa0 \n \xa0\xa0 InputElement studListUrl = querySelector( "#studListUrl" ); \n \xa0\xa0 String studUrl; \n \xa0\xa0 // 將 Label 改為 Textarea, 避免產生過程結果嵌入所在頁面 \n \xa0\xa0 TextAreaElement output = querySelector( "#output" ); \n \xa0 \xa0 \n main() { \n \xa0\xa0 querySelector( "#submit" ).onClick.listen((e) => grouping()); \n } \n \xa0 \xa0 \n grouping() { \n \xa0\xa0 output.innerHtml =  "" ; \n \xa0 \xa0 \n \xa0\xa0 if   (studListUrl.value !=  "" ) { \n \xa0\xa0\xa0\xa0 studUrl = studListUrl.value; \n \xa0\xa0 }  else   { \n \xa0\xa0\xa0\xa0 studUrl =  \'https://mde.tw/group/downloads/2019fall_cp_1a_list.txt\' ; \n \xa0\xa0 } \n \xa0 \xa0 \n \xa0\xa0 // 組序由 1 開始 \n \xa0\xa0 int gth = 1; \n \xa0\xa0 // 迴圈序號變數 \n \xa0\xa0 int i; \n \xa0\xa0 int j; \n \xa0\xa0 int total; \n \xa0\xa0 int inc; \n \xa0\xa0 // 每組學員暫存數列 \n \xa0\xa0 var gpList = []; \n \xa0\xa0 // 全班分組數列 \n \xa0\xa0 var group = []; \n \xa0\xa0 // 各組人數數列 \n \xa0\xa0 var numList = []; \n \xa0\xa0 var courseTitle =  \'cd2020\' ; \n \xa0 \xa0 \n \xa0\xa0 HttpRequest.getString(studUrl).then((String resp) { \n \xa0\xa0\xa0\xa0 // 利用 trim() 去除字串最後的跳行符號, 之後再利用 split() 根據 \\n 轉為數列 \n \xa0\xa0\xa0\xa0 var studList = resp.trim().split( "\\n" ); \n \xa0\xa0\xa0\xa0 // 數列利用 shuffle() 方法以隨機方法弄亂順序 \n \xa0\xa0\xa0\xa0 studList.shuffle(); \n \xa0\xa0\xa0\xa0 total = studList.length; \n \xa0\xa0\xa0\xa0 output.text +=  "全班總計"   + total.toString() +  " 人\\n" ; \n \xa0\xa0\xa0\xa0 numList = getNumList(studList.length); \n \xa0\xa0\xa0\xa0 inc = 0; \n \xa0\xa0\xa0\xa0 for   (i  in   numList){ \n \xa0\xa0\xa0\xa0\xa0\xa0 // 列印區隔符號 \n \xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  \'=\'   * 20 +  "\\n" ; \n \xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  "group $gth 有 "   + i.toString() +  " 人: \\n" ; \n \xa0\xa0\xa0\xa0\xa0\xa0 gpList = []; \n \xa0\xa0\xa0\xa0\xa0\xa0 for   (j = 0; j < i; j++){ \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 output.text += studList[j+inc] +  "\\n" ; \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 // 在各分組數列中加入將對應的學員學號 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 gpList.add(studList[j+inc]); \n \xa0\xa0\xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0\xa0\xa0 gth = gth + 1; \n \xa0\xa0\xa0\xa0\xa0\xa0 inc = inc + j; \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 //output.text += studList[j] + "\\n"; \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 // 逐步將各組暫存的分組數列加入全班分組數列中 \n \xa0\xa0\xa0\xa0\xa0\xa0 gpList.sort(); \n \xa0\xa0\xa0\xa0\xa0\xa0 group.add(gpList); \n \xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0 // 列出全班分組數列 \n \xa0\xa0\xa0\xa0 output.text += group.toString() +  "\\n" ; \n \xa0\xa0\xa0\xa0 // 列出已經排序後的分組名單 \n \xa0\xa0\xa0\xa0 output.text +=  \'=\'   * 25 +  "\\n" ; \n \xa0\xa0\xa0\xa0 output.text +=  \'以下為排序後的各組成員名單: \\n\' ; \n \xa0\xa0\xa0\xa0 gth = 1; \n \xa0\xa0\xa0\xa0 /* \n \xa0\xa0\xa0\xa0 404231 \n \xa0\xa0\xa0\xa0 s4052 \n \xa0\xa0\xa0\xa0 4062 \n \xa0\xa0\xa0\xa0 s4072 \n \xa0\xa0\xa0\xa0 4082 \n \xa0\xa0\xa0\xa0 5072 \n \xa0\xa0\xa0\xa0 5083 \n \xa0\xa0\xa0\xa0 */ \n \xa0\xa0\xa0\xa0 // 先列出純文字以 \\n 跳行組員資料 \n \xa0\xa0\xa0\xa0 for   (i=0; i < group.length; i++){ \n \xa0\xa0\xa0\xa0\xa0\xa0 // 列印區隔符號 \n \xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  \'=\'   * 20 +  "\\n" ; \n \xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  "group $gth \\n" ; \n \xa0\xa0\xa0\xa0\xa0\xa0 gpList = []; \n \xa0\xa0\xa0\xa0\xa0\xa0 for   (j=0; j < group[i].length; j++){ \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 output.text += group[i][j] +  "\\n" ; \n \xa0\xa0\xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0\xa0\xa0 gth = gth + 1; \n \xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 gth = 1; \n \xa0\xa0\xa0\xa0 // 最後列出超文件以 <br\\> 跳行組員資料, 包含倉儲與網站 \n \xa0\xa0\xa0\xa0 for   (i=0; i < group.length; i++){ \n \xa0\xa0\xa0\xa0\xa0\xa0 // 列印區隔符號 \n \xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  \'\\n\'   +  \'=\'   * 30 +  "<br \\>" ; \n \xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  "group $gth <br \\>" ; \n \xa0\xa0\xa0\xa0\xa0\xa0 gpList = []; \n \xa0\xa0\xa0\xa0\xa0\xa0 for   (j=0; j < group[i].length; j++){ \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if   (group[i][j].startsWith( \'4052\' ) || group[i][j].startsWith( \'4072\' )) { \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  "Repository: <a href=\'https://github.com/s"   +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 group[i][j] +  "/"   + courseTitle +  "\'>"   + group[i][j] +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "</a>"   +  " | Site: <a href=\'https://s"   + group[i][j] +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ".github.io/"   + courseTitle +  "\'>"   + group[i][j] +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "</a><br \\>" ; \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 else   { \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 output.text +=  "Repository: <a href=\'https://github.com/"   +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 group[i][j] +  "/"   + courseTitle + "\'>"   + group[i][j] +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "</a>"   +  " | Site: <a href=\'https://"   + group[i][j] +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ".github.io/"   + courseTitle +  "\'>"   + group[i][j] +  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "</a><br \\>" ; \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0\xa0\xa0 gth = gth + 1; \n \xa0\xa0\xa0\xa0 } \n \xa0\xa0 }); \n } \n \xa0 \xa0 \n List getNumList(int total){ \n \xa0\xa0 // total student number \n \xa0\xa0 // int total = 65; \n \xa0\xa0 // initial each group expect to be "eachGrp" number of people \n \xa0\xa0 int eachGrp = 10; \n \xa0\xa0 // may divide into "grpNum" number of group \n \xa0\xa0 int grpNum = total ~/ eachGrp; \n \xa0\xa0 // vacant list \n \xa0\xa0 var splits = []; \n \xa0\xa0 // find remainder when total number divid into "grpNum" number of group \n \xa0\xa0 int remainder = total % grpNum; \n \xa0\xa0 // number of people in one group by calculation \n \xa0\xa0 int calGrp = total ~/ grpNum; \n \xa0 \xa0 \n \xa0\xa0 for   (int i = 0; i < grpNum; i++) { \n \xa0\xa0\xa0\xa0 splits.add(calGrp); \n \xa0\xa0 } \n \xa0\xa0 //print(splits); \n \xa0 \xa0 \n \xa0\xa0 for   (int i = 0; i < remainder; i++) { \n \xa0\xa0\xa0\xa0 splits[i] += 1; \n \xa0\xa0 } \n \xa0\xa0 //print(splits); \n \xa0\xa0 return   splits; \n \xa0 } \n \n \n \n \n \n \n \n index.html: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n \n \n \n < h1 >亂數分組:</ h1 > \n 學員名單 URL: < input   type = "text"   id = "studListUrl"   size = "50"   value = "https://mde.tw/wcm2020/downloads/2020spring_wcm_1a_list.txt" >< br   /> \n < input   type = "submit"   value = "開始分組"   id = "submit" >< br   /> \n < textarea   id = "output"   cols = "80"   rows = "10" ></ textarea > \n \n \n \n \n \n \n \n style.css: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n \n \n \n body { \n \xa0\xa0 color :  white ; \n \xa0\xa0 font-size :  20px ; \n } \n \xa0 \n input, select, textarea { \n font-size :  100% ; \n } \n \n \n \n \n \n \n \n get_student.py \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n 44 \n 45 \n 46 \n 47 \n 48 \n 49 \n 50 \n 51 \n 52 \n 53 \n 54 \n 55 \n 56 \n 57 \n 58 \n 59 \n 60 \n 61 \n 62 \n 63 \n 64 \n 65 \n 66 \n 67 \n 68 \n 69 \n 70 \n 71 \n 72 \n 73 \n \n \n \n from   flask  import   Flask, request  \n from   flask_cors  import   CORS \n \xa0 \n import   requests \n import   bs4 \n import   ssl \n \xa0 \n \'\'\' \n https://s1.mde.nfu.edu.tw:7443/?semester=1082&courseno=0767 \n cd \n 2a 1082/0767 \n 2b 1082/0780 \n \xa0 \n 2a 1072/0777 \n 2b 1072/0790 \n 2a 1062/0788 \n 2a 1062/0802 \n \xa0 \n wcm \n 1082/0744 \n \xa0 \n 1072/0754 \n 1062/0765 \n \xa0 \n wcmj \n 1082/2418 \n \'\'\' \n \xa0 \n app  =   Flask(__name__) \n CORS(app) \n \xa0 \n @app .route( \'/studlist\' ) \n @app .route( \'/\' ) \n def   studlist(): \n \xa0\xa0\xa0\xa0 semester  =   request.args.get( \'semester\' ) \n \xa0\xa0\xa0\xa0 courseno  =   request.args.get( \'courseno\' ) \n \xa0\xa0\xa0\xa0 if   semester  = =   None : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 semester  =   \'1082\' \n \xa0\xa0\xa0\xa0 if   courseno  = =   None : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 courseno  =   \'0744\' \n \xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 url  =   \'https://osa.nfu.edu.tw/query/studlist_ajax.php\' \n \xa0\xa0\xa0\xa0 post_var  =   { \'pselyr\' : semester,  \'pseqno\' : courseno} \n \xa0 \n \xa0\xa0\xa0\xa0 result  =   requests.post(url, data  =   post_var) \n \xa0 \n \xa0\xa0\xa0\xa0 soup  =   bs4.BeautifulSoup(result.content,  \'lxml\' ) \n \xa0\xa0\xa0\xa0 table  =   soup.find( \'table\' , { \'class\' :  \'tbcls\' }) \n \xa0\xa0\xa0\xa0 data  =   [] \n \xa0\xa0\xa0\xa0 rows  =   table.find_all( \'tr\' ) \n \xa0\xa0\xa0\xa0 for   row  in   rows: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 cols  =   row.find_all( \'td\' ) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 cols  =   [ele.text.strip()  for   ele  in   cols] \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 data.append([ele  for   ele  in   cols  if   ele])  # Get rid of empty values \n \xa0\xa0\xa0\xa0 output  =   "" \n \xa0\xa0\xa0\xa0 for   i  in   data[ 2 :]: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 #print(i[0]) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 output  + = i[ 0 ]  +   "\\n" \n \xa0\xa0\xa0\xa0 return   output \n \xa0\xa0\xa0\xa0 #return\xa0 str(pselyr) + " + " +str(pseqno) \n \xa0 \n # 即使在近端仍希望以 https 模式下執行 \n context  =   ssl.SSLContext(ssl.PROTOCOL_TLSv1_2) \n context.load_cert_chain( \'localhost.crt\' ,  \'localhost.key\' ) \n \xa0 \n # 取 flaskapp.py 中的 uwsgi 變數設定 \n uwsgi  =   False \n if   uwsgi: \n \xa0\xa0\xa0\xa0 # 表示程式在雲端執行 \n \xa0\xa0\xa0\xa0 application  =   app \n else : \n \xa0\xa0\xa0\xa0 # 表示在近端執行, 以 python3 wsgi.py 執行 \n \xa0\xa0\xa0\xa0 app.run(host = \'127.0.0.1\' , port = 5443 , debug = True , ssl_context = context) \n \n \n \n \n \n \n \n nginx sites-available/default settings: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n \n \n \n server { \n \xa0\xa0\xa0\xa0 listen 8000; \n \xa0\xa0\xa0\xa0 server_name s1.mde.nfu.edu.tw; \n \xa0\xa0\xa0\xa0 charset utf-8; \n \xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 listen 7443 ssl; \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0 location /static { \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 alias /home/kmol2019/course_studlist/static/; \n \xa0\xa0\xa0\xa0 } \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0 location / { \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 include uwsgi_params; \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 uwsgi_pass\xa0 127.0.0.1:8087; \n \xa0\xa0\xa0\xa0 } \n \xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 ssl_certificate /etc/stunnel/localhost.crt; \n \xa0\xa0\xa0\xa0 ssl_certificate_key /etc/stunnel/localhost.key; \n \xa0\xa0\xa0\xa0 ssl_session_timeout 5m; \n \xa0\xa0\xa0\xa0 ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2; \n \xa0\xa0\xa0\xa0 ssl_ciphers  "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES" ; \n \xa0\xa0\xa0\xa0 ssl_prefer_server_ciphers on; \n \xa0\xa0\xa0\xa0 try_files $uri $uri/ =404; \n } \n \n \n \n \n \n \n \n uwsgi7.ini \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n \n \n \n [uwsgi] \n socket = 127.0.0.1:8087 \n uid = kmol2019 \n gid = kmol2019 \n plugins-dir = /usr/lib/uwsgi/plugins/ \n plugin = python3 \n master =  true \n logto = / var /log/uwsgi/emperor.log \n logfile-chown = kmol2019:kmol2019 \n processes = 4 \n threads = 2 \n chdir = /home/kmol2019/course_studlist \n wsgi-file = /home/kmol2019/course_studlist/get_student.py \n \n \n \n \n \n \n \n /etc/systemd/system/cmsimfly.service \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n \n \n \n [Unit] \n Description=uWSGI to serve CMSimfly \n After=network.target \n \xa0 \n [Service] \n User=kmol2019 \n Group=kmol2019 \n WorkingDirectory=/home/kmol2019/uwsgi_ini \n ExecStart=/usr/local/bin/uwsgi --emperor /home/kmol2019/uwsgi_ini \n \xa0 \n [Install] \n WantedBy=multi-user.target \n \n \n \n \n \n', 'tags': '', 'url': 'Grouping.html'}, {'title': '2a', 'text': "============================== group 1 Repository: \xa0 40723104 \xa0 | Site: \xa0 40723104 Repository: \xa0 40723107 \xa0 | Site: \xa0 40723107 Repository: \xa0 40723114 \xa0 | Site: \xa0 40723114 \xa0 (group leader) Repository: \xa0 40723115 \xa0 | Site: \xa0 40723115 Repository: \xa0 40723118 \xa0 | Site: \xa0 40723118 Repository: \xa0 40723122 \xa0 | Site: \xa0 40723122 Repository: \xa0 40723123 \xa0 | Site: \xa0 40723123 Repository: \xa0 40723140 \xa0 | Site: \xa0 40723140 Repository: \xa0 40723149 \xa0 | Site: \xa0 40723149 Repository: \xa0 40723151 \xa0 | Site: \xa0 40723151 Repository: \xa0 40723153 \xa0 | Site: \xa0 40723153 Repository: \xa0 40723154 \xa0 | Site: \xa0 40723154 Repository: \xa0 40723155 \xa0 | Site: \xa0 40723155 ============================== group 2 Repository: \xa0 40623143 \xa0 | Site: \xa0 40623143 Repository: \xa0 40723108 \xa0 | Site: \xa0 40723108 Repository: \xa0 40723127 \xa0 | Site: \xa0 40723127 Repository: \xa0 40723132 \xa0 | Site: \xa0 40723132 Repository: \xa0 40723133 \xa0 | Site: \xa0 40723133 Repository: \xa0 40723137 \xa0 | Site: \xa0 40723137 Repository: \xa0 40723141 \xa0 | Site: \xa0 40723141 Repository: \xa0 40723143 \xa0 | Site: \xa0 40723143 Repository: \xa0 40723144 \xa0 | Site: \xa0 40723144 Repository: \xa0 40723147 \xa0 | Site: \xa0 40723147 Repository: \xa0 40723148 \xa0 | Site: \xa0 40723148 Repository: \xa0 40723150 \xa0 | Site: \xa0 40723150 \xa0 (group leader) ============================== group 3 Repository: \xa0 40723103 \xa0 | Site: \xa0 40723103 Repository: \xa0 40723110 \xa0 | Site: \xa0 40723110 \xa0 (group leader) Repository: \xa0 40723112 \xa0 | Site: \xa0 40723112 Repository: \xa0 40723120 \xa0 | Site: \xa0 40723120 Repository: \xa0 40723125 \xa0 | Site: \xa0 40723125 Repository: \xa0 40723126 \xa0 | Site: \xa0 40723126 Repository: \xa0 40723128 \xa0 | Site: \xa0 40723128 Repository: \xa0 40723130 \xa0 | Site: \xa0 40723130 Repository: \xa0 40723139 \xa0 | Site: \xa0 40723139 Repository: \xa0 40723142 \xa0 | Site: \xa0 40723142 Repository: \xa0 40723145 \xa0 | Site: \xa0 40723145 Repository: \xa0 40723146 \xa0 | Site: \xa0 40723146 ============================== group 4 Repository: \xa0 40423155 \xa0 | Site: \xa0 40423155 Repository: \xa0 40723101 \xa0 | Site: \xa0 40723101 Repository: \xa0 40723102 \xa0 | Site: \xa0 40723102 Repository: \xa0 40723106 \xa0 | Site: \xa0 40723106 Repository: \xa0 40723111 \xa0 | Site: \xa0 40723111 Repository: \xa0 40723119 \xa0 | Site: \xa0 40723119 Repository: \xa0 40723121 \xa0 | Site: \xa0 40723121 Repository: \xa0 40723124 \xa0 | Site: \xa0 40723124 Repository: \xa0 40723134 \xa0 | Site: \xa0 40723134 Repository: \xa0 40723135 \xa0 | Site: \xa0 40723135 Repository: \xa0 40723136 \xa0 | Site: \xa0 40723136 Repository: \xa0 40723138 \xa0 | Site: \xa0 40723138 \xa0 (group leader) \n Grouping List: \n [['40723104', '40723107', '40723114', '40723115', '40723118', '40723122', '40723123', '40723140', '40723149', '40723151', '40723153', '40723154', '40723155'], ['40623143', '40723108', '40723127', '40723132', '40723133', '40723137', '40723141', '40723143', '40723144', '40723147', '40723148', '40723150'], ['40723103', '40723110', '40723112', '40723120', '40723125', '40723126', '40723128', '40723130', '40723139', '40723142', '40723145', '40723146'], ['40423155', '40723101', '40723102', '40723106', '40723111', '40723119', '40723121', '40723124', '40723134', '40723135', '40723136', '40723138']] \n", 'tags': '', 'url': '2a.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}, {'title': 'week', 'text': '', 'tags': '', 'url': 'week.html'}, {'title': 'week3', 'text': 'taskleader :40723145 40723126 40723146 \xa0 \xa0 \xa0 1. Describe how to do an efficient random grouping for this course or do the roll calling randomly? \n taskleader :40723110 40723112 40723130 \xa0 \xa0 \xa0 2. Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain CMSiMDE website, Pelican blog and Reveal.js presentation on Github? \n taskleader :40723125 40723103 40723120 40723142 \xa0 \xa0 \xa0 \xa03. What do you need to know from http://www.coppeliarobotics.com/helpFiles/index.html to implement a four-wheeled robot? \n w3開會紀錄 \n \n', 'tags': '', 'url': 'week3.html'}, {'title': 'Assignment1', 'text': '', 'tags': '', 'url': 'Assignment1.html'}, {'title': 'Python3.8.2', 'text': 'basic Win10 portable programming \n 在你的可攜下創建一個data子目錄\xa0 :\xa0\xa0 \n \n --everything-is-local\xa0 \xa0 \n https://git-scm.com/download/win \xa0 \xa0 \xa0 \xa0 \xa0 \n 要用git指令要有portablegit 。data下子目錄存取為portablegit(需與啟動檔配合)。 \n start.bat (參考) : \n \n . \n .. \n ... \n ================================================================= \n \n https://www.python.org/downloads/ \n 選取需要的版本(EX : 3.8.2)\xa0 \n 點取執行檔 Windows x86-64 executable installer \n data下子目錄 存取的名稱要跟執行檔相配合(EX : py38) \n \n . \n .. \n ... \n ================================================================= \n \n \n \n \n \n Download Scintilla and SciTE \n \n \n \n 編輯器(用來創建start.bat , stop.bat) https://www.scintilla.org/SciTEDownload.html \n 解開檔案為wscite \n 通過打開SciTE.exe\xa0 \\ Option \\ Open Global Options File \n 找到code.page的部分 , 把code.page=0給註記掉 , 並把code.page=65001取消註記 \n \n \n start.bat\xa0 : \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n \n \n \n @echo off \n set Disk=y \n subst %Disk%: "data" \n \xa0 \n %Disk%: \n \xa0 \n set HomePath=%Disk%:\\home_mdecourse \n set HomeDrive=%Disk%:\\home_mdecourse \n set Home=%Disk%:\\home_mdecourse \n set USERPROFILE=%Disk%:\\home_mdecourse \n \xa0 \n REM for putty \n set GIT_HOME=%Disk%:\\portablegit\\bin\\ \n set GIT_SSH=%Disk%:\\putty\\plink.exe \n \xa0 \n REM 將系統 Python 程式的 io 設為 utf-8 \n set PYTHONIOENCODING="utf-8" \n \xa0 \n set PYTHONPATH=%Disk%:\\py38\\DLLs;%Disk%:\\py38\\Lib;%Disk%:\\py38\\Lib\\site-packages; \n set PYTHONHOME=%Disk%:\\py38 \n \xa0 \n set path_python=%Disk%:\\py38;%Disk%:\\py38\\Scripts; \n set path_msys2=%Disk%:\\msys64\\mingw64\\bin; \n REM coreutils is for compiling fossil scm \n set path_coreutils=%Disk%:\\coreutils-5.3.0\\bin;%Disk%:\\depends22_x64; \n set path_tcc=%Disk%:\\tcc; \n set path_cmake=%Disk%:\\cmake-3.10.1-win64-x64\\bin; \n set path_nodejs=Disk%:\\nodejs;%Disk%:\\nodejs\\appdata\\roaming\\npm; \n set path_git=%Disk%:\\portablegit\\bin; \n set path_xming=%Disk%:\\Xming; \n set path_latex=%%Disk%:\\Pandoc;%Disk%:\\TinyTeX\\bin\\win32; \n \xa0 \n path=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%; \n \xa0 \n start /MIN cmd.exe \n start /MIN cmd.exe \n start /MIN cmd.exe \n start /MIN cmd.exe \n \xa0 \n start /MIN %Disk%:\\wscite\\SciTE.exe \n start /MIN %Disk%:\\wscite\\SciTE.exe \n \xa0 \n Exit \n \n \n \n \n \n \n \n \n stop.bat \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n \n \n \n @echo off \n set Disk=y \n path=%PATH%; \n \xa0 \n taskkill /IM python.exe /F \n taskkill /IM pythonw.exe /F \n taskkill /IM node.exe /F \n taskkill /IM Range.exe /F \n taskkill /IM SciTE.exe /F \n REM 終止虛擬硬碟與目錄的對應 \n subst %Disk%: /D \n REM 關閉 cmd 指令視窗 \n taskkill /IM cmd.exe /F \n EXIT \n \n \n \n \n \n \n \n - \n 假使要快速比較修改前後 :，可使用一個工具 :\xa0 \n \xa0 KDiff3 - Home \n http://kdiff3.sourceforge.net/ \n \n \n 可即時看到檔案間的差別 \n 也可以用來比較 Tiny C Compiler\xa0\xa0 \n https://directory.fsf.org/wiki/Tiny_C_Compiler \xa0\xa0 檔案編輯前後的差異 \n \n \n https://bellard.org/tcc/ \n . \n .. \n ... \n ================================================================ \n pip \n get-pip.py 頁面存取成data下的get-pip.py \n 再繼續用 : \n \n \n \n \n \n \n 1 \n \n \n \n python -m pip install flask lxml bs4 flask-cors Markdown pelican leo \n \n \n \n \n \n \n \n 下載網際系統相關套件 \n \n ============================================================== \n \n HxD - Freeware Hex Editor and Disk Editor \n \n \n \n \n https://mh-nexus.de/en/hxd/ \xa0 \xa0 \xa0 \n 選取該version區目前適合的版本 \n 利用 HxD 修改 pip.exe 中python.exe 的所在位置(pip.exe是存取在p38的Scripts裡) , HxD 開啟之後搜尋c:\\py38\\python.exe , 然後將滑鼠停在 c 然後輸入y:\\p37\\python.exe, 以便讓可攜系統啟動後, 可以將指令搜尋路徑設到 y:\\p38\\Scripts , 這樣就可以直接以\xa0 "pip install " 指令安裝套件. \n \n \n \n \n \n \n 1 \n \n \n \n pip install Flask Markdown lxml bs4 flask_cors pelican leo \n \n \n \n \n \n \n \n \n . \n .. \n ... \n ================================================================ \n MSYS2 installer \n MSYS2 :\xa0 https://www.msys2.org/ \n \n 接著設定start.bat \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n \n \n \n REM 設定 msys2 64 位元的執行路徑 \n set path_msys2=%Disk%:\\msys64\\mingw64\\bin; \n \xa0 \n path=%Disk%:;%path_python%;%path_git%;%path_msys2%; \n \n \n \n \n \n \n \n \n . \n .. \n ... \n ================================================================= \n ShareX \n ShareX :\xa0 https://getsharex.com/ \n \n . \n .. \n ... \n ================================================================= \n Tmp (Y\\tmp : git clone .....) \n \n . \n .. \n ... \n ================================================================= \n https://github.com/flutter/flutter \n . \n .. \n ... \n ================================================================= \n Fossil \n \n https://www.fossil-scm.org/index.html/doc/trunk/www/build.wiki \n \n \n . \n .. \n ... \n ================================================================= \n putty\xa0 putty \n \n', 'tags': '', 'url': 'Python3.8.2.html'}, {'title': 'CoppeliaSim', 'text': 'Assignment 1-3分工 \n https://www.coppeliarobotics.com/helpFiles/index.html \n \n \n CoppeliaSim 高度可定制的模擬器，可以自定義模擬的每個方面。此外模擬器本身可以進行定制，以使性能完全符合要求。 \n 這可以通過精心設計的應用程序編程接口（API）來實現。 \n 支持六種不同的編程或編碼方法，每種方法都具有相對於其他方法的特殊優點（顯然還有缺點），但所有六種方法都是相互兼容的（即可以同時使用，甚至可以協同使用）。 \n', 'tags': '', 'url': 'CoppeliaSim.html'}, {'title': 'Random grouping', 'text': '\n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n \n \n \n import   requests \n import   random \n url  =   "https://mde.tw/cd2020/downloads/2020spring_cd_2a_list.txt" \n Msource  =   requests.get(url) \n #print(Msource.text) \n member  =   Msource.text \n mlist  =   member.split( "\\n" ) \n mlist.pop() \n #print(member) \n mlen  =   len (mlist) \n #print(mlist[0:13]) \n random.shuffle(mlist) \n \xa0 \n g1  =   13 \n g2  =   2 * g1 \n g3  =   3 * g1 \n g4  =   int (mlen) \n \xa0 \n print ( "全班共" ,mlen, "人" ) \n for   i  in   range ( 1 , 5 ): \n \xa0\xa0\xa0\xa0 print ( "Group" ,i, ":" ) \n \xa0\xa0\xa0\xa0 if   (i  = =   1 ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 for   j  in   range ( 0 ,g1): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print (mlist[j]) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 j  + =   1 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( "-" * 20 ) \n \xa0\xa0\xa0\xa0 elif   (i  = =   2 ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 for   m  in   range (g1,g2): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print (mlist[g1]) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 g1  + =   1 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( "-" * 20 ) \n \xa0\xa0\xa0\xa0 elif   (i  = =   3 ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 for   k  in   range (g2,g3): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print (mlist[g2]) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 g2  + =   1 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( "-" * 20 ) \n \xa0\xa0\xa0\xa0 elif   (i  = =   4 ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 for   l  in   range (g3,g4): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print (mlist[g3]) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 g3  + =   1 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( "-" * 20 ) \n print (mlist) \n \n \n \n \n \n \n', 'tags': '', 'url': 'Random grouping.html'}]};